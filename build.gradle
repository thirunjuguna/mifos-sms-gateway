buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE',
               'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: "org.springframework.boot"
apply plugin: 'io.spring.dependency-management'
apply plugin: 'license'

if (project.hasProperty('profile')
        && project.getProperty('profile') == 'deployable') {
    apply from: 'profile-deployable.gradle'
} else {
    apply from: 'profile-standalone.gradle'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
    maven {
        url  "http://dl.bintray.com/africastalking/java"
    }
}

license {
    header rootProject.file('./LICENSE.md')
    excludes(["**/*"])
    skipExistingHeaders true
    ignoreFailures true
}

task licenseFormatBuildScripts (type:nl.javadude.gradle.plugins.license.License) {
    source = fileTree(dir: './', includes: ['**/*.bat', '**/*.sh', '**/*.sql'])
}
licenseFormat.dependsOn licenseFormatBuildScripts

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.flywaydb:flyway-core")
    compile('org.apache.velocity:velocity:1.7')
    compile('com.squareup.okhttp:okhttp:2.7.5')
    compile('com.squareup.okhttp:okhttp-urlconnection:2.7.5')
    compile('com.squareup.retrofit:retrofit:1.9.0')
    compile('com.twilio.sdk:twilio:7.40.1')
    compile('org.drizzle.jdbc:drizzle-jdbc:1.4')
    compile('com.infobip:infobip-api-java-client:3.0.1')
    compile('com.africastalking:core:3.4.2')
    testCompile("org.springframework.boot:spring-boot-starter-test")
    
}

wrapper{
    gradleVersion = '1.11'
    distributionUrl = distributionUrl.replace('bin','all')
}
